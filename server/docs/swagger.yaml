basePath: /v1
definitions:
  post.CreatePostRequest:
    properties:
      Abstract:
        type: string
      ContentRaw:
        type: string
      Title:
        type: string
    type: object
  post.Post:
    properties:
      Abstract:
        type: string
      AuthorID:
        type: string
      ContentRaw:
        type: string
      CreatedAt:
        type: string
      ID:
        type: string
      IsPublished:
        type: boolean
      LastEditedBy:
        type: string
      PublishedAt:
        type: string
      Slug:
        type: string
      Title:
        type: string
      UpdatedAt:
        type: string
      Version:
        type: integer
    type: object
  post.UpdateRequest:
    properties:
      Body:
        type: string
    type: object
  responsehandler.Error:
    description: Error message with HTTP status code and error message
    properties:
      Message:
        type: string
      StatusCode:
        type: integer
    type: object
host: blog.abaltra.me/api
info:
  contact: {}
  description: Very simple implementation of a bloggin platform using Mongo as a data
    store and Go with gorilla/mux.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Glog - A Go Blogging backend using Mongo
  version: "1.0"
paths:
  /v2/tenant/{tenantID}/posts:
    post:
      consumes:
      - application/json
      description: Create a new post with an auto-generated ID
      parameters:
      - description: Tenant ID
        in: path
        name: tenantID
        required: true
        type: integer
      - description: Post to create
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/post.CreatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsehandler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsehandler.Error'
      summary: Create a new Post
  /v2/tenant/{tenantID}/posts/{slug}:
    delete:
      consumes:
      - application/json
      description: Completely removes a post
      parameters:
      - description: Tenant ID
        in: path
        name: tenantID
        required: true
        type: integer
      - description: Unique slug of the post to delete
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsehandler.Error'
        "502":
          description: Bad Gateway
          schema:
            $ref: '#/definitions/responsehandler.Error'
      summary: Delete a Post
    get:
      consumes:
      - application/json
      description: Retrieve an existing post
      parameters:
      - description: Tenant ID
        in: path
        name: tenantID
        required: true
        type: integer
      - description: Unique slug of post to retrieve
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/post.Post'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responsehandler.Error'
      summary: Retrieve a Post
    post:
      consumes:
      - application/json
      description: Changes post body and updates LastUpdateTime timestamp
      parameters:
      - description: Tenant ID
        in: path
        name: tenantID
        required: true
        type: integer
      - description: Unique slug of the post
        in: path
        name: slug
        required: true
        type: string
      - description: Post to create
        in: body
        name: '{object}'
        required: true
        schema:
          $ref: '#/definitions/post.UpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsehandler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsehandler.Error'
      summary: Updates a Post
  /v2/tenant/{tenantID}/posts/{slug}/publish:
    put:
      consumes:
      - application/json
      description: Publshes an existing Post, adding the proper timestamps
      parameters:
      - description: Tenant ID
        in: path
        name: tenantID
        required: true
        type: integer
      - description: Unique slug of the post
        in: path
        name: slug
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responsehandler.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responsehandler.Error'
      summary: Publish a Post
swagger: "2.0"
